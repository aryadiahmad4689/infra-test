apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: kafka-manual
spec:
  serviceName: "kafka"
  replicas: 1
  selector:
    matchLabels:
      app: kafka
      broker: "1"
  template:
    metadata:
      labels:
        app: kafka
        broker: "1"
    spec:
      containers:
      - name: kafka
        image: wurstmeister/kafka
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://0.0.0.0:9092  # Directly set Zookeeper connect information
        - name: KAFKA_CONFIG
          valueFrom:
            configMapKeyRef:
              name: kafka-config-1
              key: server.properties
        volumeMounts:
        - name: kafka-config
          mountPath: /etc/kafka
      volumes:
      - name: kafka-config
        configMap:
          name: kafka-config-1
  volumeClaimTemplates:
  - metadata:
      name: kafka-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 50Gi

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: kafka-manual
spec:
  serviceName: "kafka"
  replicas: 1
  selector:
    matchLabels:
      app: kafka
      broker: "2"
  template:
    metadata:
      labels:
        app: kafka
        broker: "2"
    spec:
      containers:
      - name: kafka
        image: wurstmeister/kafka
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://0.0.0.0:9092 # Directly set Zookeeper connect information
        - name: KAFKA_CONFIG
          valueFrom:
            configMapKeyRef:
              name: kafka-config-2
              key: server.properties
        volumeMounts:
        - name: kafka-config
          mountPath: /etc/kafka
      volumes:
      - name: kafka-config
        configMap:
          name: kafka-config-2
  volumeClaimTemplates:
  - metadata:
      name: kafka-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 50Gi

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: kafka-manual
spec:
  serviceName: "kafka"
  replicas: 1
  selector:
    matchLabels:
      app: kafka
      broker: "3"
  template:
    metadata:
      labels:
        app: kafka
        broker: "3"
    spec:
      containers:
      - name: kafka
        image: wurstmeister/kafka
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://0.0.0.0:9092
        - name: KAFKA_CONFIG
          valueFrom:
            configMapKeyRef:
              name: kafka-config-3
              key: server.properties
        volumeMounts:
        - name: kafka-config
          mountPath: /etc/kafka
      volumes:
      - name: kafka-config
        configMap:
          name: kafka-config-3
  volumeClaimTemplates:
  - metadata:
      name: kafka-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 50Gi
