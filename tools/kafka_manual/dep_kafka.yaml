apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: kafka-broker
  name: kafka-broker
  namespace: kafka-manual
spec:
  serviceName: "kafka-broker"
  replicas: 3
  selector:
    matchLabels:
      app: kafka-broker
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: kafka-broker
        image: wurstmeister/kafka
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9092
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KAFKA_BROKER_ID
          value: "$(hostname | awk -F'-' '{print $$NF}')"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        - name: KAFKA_LOG_DIRS
          value: "/opt/kafka/logs"
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://0.0.0.0:9092
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://$(hostname).kafka-broker.kafka-manual.svc.cluster.local:9092"
        command:
        - sh
        - -c
        - |
          export KAFKA_BROKER_ID=$(hostname | awk -F'-' '{print $NF}');
          export KAFKA_ADVERTISED_LISTENERS="PLAINTEXT://$(hostname).kafka-broker.kafka-manual.svc.cluster.local:9092";
          exec kafka-server-start.sh /etc/kafka-config/server.properties
        volumeMounts:
        - name: kafka-storage
          mountPath: /kafka
        - name: config-volume
          mountPath: /etc/kafka-config
        - name: kafka-logs
          mountPath: /opt/kafka/logs
      volumes:
      - name: config-volume
        configMap:
          name: kafka-config
      - name: kafka-logs
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: kafka-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi
