apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: kafka-broker
  name: kafka-broker
  namespace: kafka-manual
spec:
  serviceName: "kafka-broker"
  replicas: 3
  selector:
    matchLabels:
      app: kafka-broker
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
      - name: config-init
        image: busybox
        securityContext:
          runAsUser: 0
          runAsGroup: 0
        command: ['sh', '-c', "cp /etc/kafka-config/server.properties /etc/kafka-config-modified/server.properties && sed -i 's/__POD_NAME__/$POD_NAME/' /etc/kafka-config-modified/server.properties"]
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: config-volume
          mountPath: /etc/kafka-config
          subPath: server.properties
          readOnly: true
        - name: modified-config-volume
          mountPath: /etc/kafka-config-modified
      containers:
      - name: kafka-broker
        image: wurstmeister/kafka
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9092
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KAFKA_BROKER_ID
          value: "$(hostname | awk -F'-' '{print $$NF}')"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        - name: KAFKA_LOG_DIRS
          value: "/kafka-logs"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://$(POD_NAME).kafka-broker.kafka-manual.svc.cluster.local:9092"
        - name: KAFKA_LISTENERS
          value: "PLAINTEXT://0.0.0.0:9092"
        volumeMounts:
        - name: kafka-storage
          mountPath: /kafka
        - name: modified-config-volume
          mountPath: /etc/kafka-config
        - name: kafka-logs
          mountPath: /kafka-logs
        command: ["sh", "-c", "exec kafka-server-start.sh /etc/kafka-config/server.properties"]
      volumes:
      - name: config-volume
        configMap:
          name: kafka-config
          items:
          - key: server.properties
            path: server.properties
      - name: modified-config-volume
        emptyDir: {}
      - name: kafka-logs
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: kafka-storage
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
