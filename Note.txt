kubectl port-forward --namespace kube-system service/registry 5000:80 -> lihat registry dari kubernetest local
docker rmi id_image -> hapus image docker
docker tag image:latest ip:port/image:tag
docker push ip:port/image:tag -> push ke registry

minikube start --insecure-registry="192.168.49.2:5000"

// login docker temp
export DOCKER_CONFIG=$(mktemp -d)
docker login

// login ke cloud kita
gcloud container clusters get-credentials test-cluster --zone us-central1-c --project tetscloud

// argocd install
helm upgrade --install argocd argo/argo-cd --namespace argocd -f tools/run_app/argocd.yaml

helm install argocd-staging argo/argo-cd --namespace argocd-staging
helm install argocd-prod argo/argo-cd --namespace argocd-prod

kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 --decode; echo

Show Values
helm show values argo/argo-cd > tools/run_app/argocd.yaml


check secret
kubectl get secret gcr-json-key -n argocd -o yaml

create secret
# kubectl create secret docker-registry gcr-json-key --docker-server=us.gcr.io --docker-username=_json_key --docker-password="$(cat ./gke/tetscloud.json)" --docker-email=ariadi.ahmadd@gmail.com --namespace argocd

kubectl logs -n argocd -l app.kubernetes.io/name=argocd-image-updater

# pull data dari helm
helm pull argo/argocd-image-updater

tar -xvzf argocd-image-updater-0.9.6.tgz

create sertifikat tls cloudflar
kubectl create secret tls grafana-tls --key certified/private.pem --cert certified/origin.pem -n monitoring

# lihat kalau ada error di ingress controller kong
kubectl describe ingress appv1-ingress -n kong